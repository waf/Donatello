//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Donatello.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Donatello.Parser.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class DonatelloLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, STRING=11, FLOAT=12, LONG=13, BOOLEAN=14, MATH=15, NAME=16, TRASH=17;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "STRING", "FLOAT", "FLOAT_DECIMAL", "LONG", "BOOLEAN", "MATH", 
		"NAME", "LETTER", "LOWER", "UPPER", "DIGIT", "WS", "TRASH"
	};


	public DonatelloLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DonatelloLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'['", "']'", "'{'", "'}'", "'|'", "'def'", "'defn'", 
		"'let'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, "STRING", 
		"FLOAT", "LONG", "BOOLEAN", "MATH", "NAME", "TRASH"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Donatello.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DonatelloLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x13', '\x95', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\a', 
		'\f', 'Q', '\n', '\f', '\f', '\f', '\xE', '\f', 'T', '\v', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x5', '\r', 'Y', '\n', '\r', '\x3', '\r', 
		'\x6', '\r', '\\', '\n', '\r', '\r', '\r', '\xE', '\r', ']', '\x3', '\r', 
		'\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x6', '\xE', '\x64', '\n', '\xE', 
		'\r', '\xE', '\xE', '\xE', '\x65', '\x3', '\xF', '\x5', '\xF', 'i', '\n', 
		'\xF', '\x3', '\xF', '\x6', '\xF', 'l', '\n', '\xF', '\r', '\xF', '\xE', 
		'\xF', 'm', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x5', '\x10', 'y', '\n', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\a', '\x12', '\x81', 
		'\n', '\x12', '\f', '\x12', '\xE', '\x12', '\x84', '\v', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x5', '\x13', '\x88', '\n', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x18', '\x2', '\x2', '\x19', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', 
		'\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\x2', 
		'\x1D', '\xF', '\x1F', '\x10', '!', '\x11', '#', '\x12', '%', '\x2', '\'', 
		'\x2', ')', '\x2', '+', '\x2', '-', '\x2', '/', '\x13', '\x3', '\x2', 
		'\x6', '\x3', '\x2', '$', '$', '\x3', '\x2', '\x32', ';', '\x6', '\x2', 
		'\'', '\'', ',', '-', '/', '/', '\x31', '\x31', '\x6', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '.', '.', '\x2', '\x9A', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x3', '\x31', '\x3', '\x2', '\x2', 
		'\x2', '\x5', '\x33', '\x3', '\x2', '\x2', '\x2', '\a', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\t', '\x37', '\x3', '\x2', '\x2', '\x2', '\v', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\r', ';', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x11', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x43', '\x3', '\x2', '\x2', '\x2', '\x15', 'H', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'L', '\x3', '\x2', '\x2', '\x2', '\x19', 'X', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', '\x61', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'h', '\x3', '\x2', '\x2', '\x2', '\x1F', 'x', '\x3', '\x2', '\x2', '\x2', 
		'!', 'z', '\x3', '\x2', '\x2', '\x2', '#', '|', '\x3', '\x2', '\x2', '\x2', 
		'%', '\x87', '\x3', '\x2', '\x2', '\x2', '\'', '\x89', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x8B', '\x3', '\x2', '\x2', '\x2', '+', '\x8D', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x8F', '\x3', '\x2', '\x2', '\x2', '/', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\x32', '\a', '*', '\x2', '\x2', '\x32', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', '+', '\x2', '\x2', 
		'\x34', '\x6', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', ']', 
		'\x2', '\x2', '\x36', '\b', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', 
		'\a', '_', '\x2', '\x2', '\x38', '\n', '\x3', '\x2', '\x2', '\x2', '\x39', 
		':', '\a', '}', '\x2', '\x2', ':', '\f', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\a', '\x7F', '\x2', '\x2', '<', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\a', '~', '\x2', '\x2', '>', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\a', '\x66', '\x2', '\x2', '@', '\x41', '\a', 'g', '\x2', '\x2', 
		'\x41', '\x42', '\a', 'h', '\x2', '\x2', '\x42', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\x43', '\x44', '\a', '\x66', '\x2', '\x2', '\x44', '\x45', 
		'\a', 'g', '\x2', '\x2', '\x45', '\x46', '\a', 'h', '\x2', '\x2', '\x46', 
		'G', '\a', 'p', '\x2', '\x2', 'G', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'H', 'I', '\a', 'n', '\x2', '\x2', 'I', 'J', '\a', 'g', '\x2', '\x2', 
		'J', 'K', '\a', 'v', '\x2', '\x2', 'K', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'L', 'R', '\a', '$', '\x2', '\x2', 'M', 'Q', '\n', '\x2', '\x2', '\x2', 
		'N', 'O', '\a', '^', '\x2', '\x2', 'O', 'Q', '\a', '$', '\x2', '\x2', 
		'P', 'M', '\x3', '\x2', '\x2', '\x2', 'P', 'N', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'T', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', '\x2', 
		'R', 'S', '\x3', '\x2', '\x2', '\x2', 'S', 'U', '\x3', '\x2', '\x2', '\x2', 
		'T', 'R', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', '$', '\x2', '\x2', 
		'V', '\x18', '\x3', '\x2', '\x2', '\x2', 'W', 'Y', '\a', '/', '\x2', '\x2', 
		'X', 'W', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'Y', '[', '\x3', '\x2', '\x2', '\x2', 'Z', '\\', '\t', '\x3', '\x2', '\x2', 
		'[', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\x3', '\x2', '\x2', 
		'\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', '\x2', 
		'\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x5', '\x1B', 
		'\xE', '\x2', '`', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x61', '\x63', 
		'\a', '\x30', '\x2', '\x2', '\x62', '\x64', '\t', '\x3', '\x2', '\x2', 
		'\x63', '\x62', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x66', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'g', 'i', '\a', '/', '\x2', '\x2', 'h', 'g', '\x3', '\x2', '\x2', '\x2', 
		'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'k', '\x3', '\x2', '\x2', '\x2', 
		'j', 'l', '\t', '\x3', '\x2', '\x2', 'k', 'j', '\x3', '\x2', '\x2', '\x2', 
		'l', 'm', '\x3', '\x2', '\x2', '\x2', 'm', 'k', '\x3', '\x2', '\x2', '\x2', 
		'm', 'n', '\x3', '\x2', '\x2', '\x2', 'n', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'p', '\a', 'v', '\x2', '\x2', 'p', 'q', '\a', 't', '\x2', 
		'\x2', 'q', 'r', '\a', 'w', '\x2', '\x2', 'r', 'y', '\a', 'g', '\x2', 
		'\x2', 's', 't', '\a', 'h', '\x2', '\x2', 't', 'u', '\a', '\x63', '\x2', 
		'\x2', 'u', 'v', '\a', 'n', '\x2', '\x2', 'v', 'w', '\a', 'u', '\x2', 
		'\x2', 'w', 'y', '\a', 'g', '\x2', '\x2', 'x', 'o', '\x3', '\x2', '\x2', 
		'\x2', 'x', 's', '\x3', '\x2', '\x2', '\x2', 'y', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'z', '{', '\t', '\x4', '\x2', '\x2', '{', '\"', '\x3', '\x2', '\x2', 
		'\x2', '|', '\x82', '\x5', '%', '\x13', '\x2', '}', '\x81', '\x5', '%', 
		'\x13', '\x2', '~', '\x81', '\x5', '+', '\x16', '\x2', '\x7F', '\x81', 
		'\a', '\x61', '\x2', '\x2', '\x80', '}', '\x3', '\x2', '\x2', '\x2', '\x80', 
		'~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x7F', '\x3', '\x2', '\x2', 
		'\x2', '\x81', '\x84', '\x3', '\x2', '\x2', '\x2', '\x82', '\x80', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x83', '\x3', '\x2', '\x2', '\x2', '\x83', 
		'$', '\x3', '\x2', '\x2', '\x2', '\x84', '\x82', '\x3', '\x2', '\x2', 
		'\x2', '\x85', '\x88', '\x5', '\'', '\x14', '\x2', '\x86', '\x88', '\x5', 
		')', '\x15', '\x2', '\x87', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '\x88', '&', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x8A', '\x4', '\x63', '|', '\x2', '\x8A', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8C', '\x4', '\x43', '\\', '\x2', '\x8C', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x4', '\x32', ';', '\x2', 
		'\x8E', ',', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\t', '\x5', 
		'\x2', '\x2', '\x90', '.', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', 
		'\x5', '-', '\x17', '\x2', '\x92', '\x93', '\x3', '\x2', '\x2', '\x2', 
		'\x93', '\x94', '\b', '\x18', '\x2', '\x2', '\x94', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\xE', '\x2', 'P', 'R', 'X', ']', '\x65', 'h', 'm', 'x', 
		'\x80', '\x82', '\x87', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Donatello.Parser.Generated
