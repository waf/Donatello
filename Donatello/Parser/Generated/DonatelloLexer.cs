//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Donatello.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Donatello.Parser.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class DonatelloLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, PROPERTY=12, METHOD=13, STRING=14, FLOAT=15, LONG=16, 
		BOOLEAN=17, NAME=18, QUALIFIED_NAME=19, MATH=20, TRASH=21;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "PROPERTY", "METHOD", "STRING", "FLOAT", "FLOAT_DECIMAL", 
		"LONG", "BOOLEAN", "NAME", "QUALIFIED_NAME", "MATH", "LETTER", "LOWER", 
		"UPPER", "DIGIT", "WS", "TRASH"
	};


	public DonatelloLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DonatelloLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'['", "']'", "'{'", "'}'", "'|'", "'def'", "'defn'", 
		"'let'", "'deftype'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"PROPERTY", "METHOD", "STRING", "FLOAT", "LONG", "BOOLEAN", "NAME", "QUALIFIED_NAME", 
		"MATH", "TRASH"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Donatello.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DonatelloLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x17', '\xBA', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\a', '\xF', 'g', '\n', '\xF', '\f', '\xF', '\xE', '\xF', 'j', 
		'\v', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x5', '\x10', 
		'o', '\n', '\x10', '\x3', '\x10', '\x6', '\x10', 'r', '\n', '\x10', '\r', 
		'\x10', '\xE', '\x10', 's', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', 
		'\x3', '\x11', '\x6', '\x11', 'z', '\n', '\x11', '\r', '\x11', '\xE', 
		'\x11', '{', '\x3', '\x12', '\x5', '\x12', '\x7F', '\n', '\x12', '\x3', 
		'\x12', '\x6', '\x12', '\x82', '\n', '\x12', '\r', '\x12', '\xE', '\x12', 
		'\x83', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x5', 
		'\x13', '\x8F', '\n', '\x13', '\x3', '\x14', '\x3', '\x14', '\x5', '\x14', 
		'\x93', '\n', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\a', 
		'\x14', '\x98', '\n', '\x14', '\f', '\x14', '\xE', '\x14', '\x9B', '\v', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\x5', '\x15', '\x9F', '\n', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\a', '\x15', '\xA4', '\n', 
		'\x15', '\f', '\x15', '\xE', '\x15', '\xA7', '\v', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x5', '\x17', '\xAD', '\n', 
		'\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', 
		'\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x2', '\x2', '\x1D', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x2', '#', 
		'\x12', '%', '\x13', '\'', '\x14', ')', '\x15', '+', '\x16', '-', '\x2', 
		'/', '\x2', '\x31', '\x2', '\x33', '\x2', '\x35', '\x2', '\x37', '\x17', 
		'\x3', '\x2', '\a', '\x3', '\x2', '$', '$', '\x3', '\x2', '\x32', ';', 
		'\x4', '\x2', '\x30', '\x30', '\x61', '\x61', '\x6', '\x2', '\'', '\'', 
		',', '-', '/', '/', '\x31', '\x31', '\x6', '\x2', '\v', '\f', '\xF', '\xF', 
		'\"', '\"', '.', '.', '\x2', '\xC4', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x3', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x5', ';', '\x3', '\x2', '\x2', '\x2', '\a', '=', '\x3', '\x2', 
		'\x2', '\x2', '\t', '?', '\x3', '\x2', '\x2', '\x2', '\v', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x43', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\x11', 'G', '\x3', '\x2', '\x2', 
		'\x2', '\x13', 'K', '\x3', '\x2', '\x2', '\x2', '\x15', 'P', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'T', '\x3', '\x2', '\x2', '\x2', '\x19', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', '_', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'\x62', '\x3', '\x2', '\x2', '\x2', '\x1F', 'n', '\x3', '\x2', '\x2', 
		'\x2', '!', 'w', '\x3', '\x2', '\x2', '\x2', '#', '~', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x8E', '\x3', '\x2', '\x2', '\x2', '\'', '\x92', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x9E', '\x3', '\x2', '\x2', '\x2', '+', '\xA8', '\x3', 
		'\x2', '\x2', '\x2', '-', '\xAC', '\x3', '\x2', '\x2', '\x2', '/', '\xAE', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\xB0', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\xB2', '\x3', '\x2', '\x2', '\x2', '\x35', '\xB4', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\xB6', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\a', '*', '\x2', '\x2', ':', '\x4', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\a', '+', '\x2', '\x2', '<', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\a', ']', '\x2', '\x2', '>', '\b', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\a', '_', '\x2', '\x2', '@', '\n', '\x3', '\x2', '\x2', '\x2', 
		'\x41', '\x42', '\a', '}', '\x2', '\x2', '\x42', '\f', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x44', '\a', '\x7F', '\x2', '\x2', '\x44', '\xE', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x46', '\a', '~', '\x2', '\x2', '\x46', 
		'\x10', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '\x66', '\x2', '\x2', 
		'H', 'I', '\a', 'g', '\x2', '\x2', 'I', 'J', '\a', 'h', '\x2', '\x2', 
		'J', '\x12', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\a', '\x66', '\x2', 
		'\x2', 'L', 'M', '\a', 'g', '\x2', '\x2', 'M', 'N', '\a', 'h', '\x2', 
		'\x2', 'N', 'O', '\a', 'p', '\x2', '\x2', 'O', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'P', 'Q', '\a', 'n', '\x2', '\x2', 'Q', 'R', '\a', 'g', '\x2', 
		'\x2', 'R', 'S', '\a', 'v', '\x2', '\x2', 'S', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'T', 'U', '\a', '\x66', '\x2', '\x2', 'U', 'V', '\a', 'g', '\x2', 
		'\x2', 'V', 'W', '\a', 'h', '\x2', '\x2', 'W', 'X', '\a', 'v', '\x2', 
		'\x2', 'X', 'Y', '\a', '{', '\x2', '\x2', 'Y', 'Z', '\a', 'r', '\x2', 
		'\x2', 'Z', '[', '\a', 'g', '\x2', '\x2', '[', '\x18', '\x3', '\x2', '\x2', 
		'\x2', '\\', ']', '\a', '/', '\x2', '\x2', ']', '^', '\x5', '\'', '\x14', 
		'\x2', '^', '\x1A', '\x3', '\x2', '\x2', '\x2', '_', '`', '\a', '\x30', 
		'\x2', '\x2', '`', '\x61', '\x5', '\'', '\x14', '\x2', '\x61', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', '\x62', 'h', '\a', '$', '\x2', '\x2', '\x63', 
		'g', '\n', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', '^', '\x2', '\x2', 
		'\x65', 'g', '\a', '$', '\x2', '\x2', '\x66', '\x63', '\x3', '\x2', '\x2', 
		'\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', 'g', 'j', '\x3', '\x2', 
		'\x2', '\x2', 'h', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', 
		'\x2', '\x2', '\x2', 'i', 'k', '\x3', '\x2', '\x2', '\x2', 'j', 'h', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'l', '\a', '$', '\x2', '\x2', 'l', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', 'm', 'o', '\a', '/', '\x2', '\x2', 'n', 'm', '\x3', 
		'\x2', '\x2', '\x2', 'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'q', '\x3', 
		'\x2', '\x2', '\x2', 'p', 'r', '\t', '\x3', '\x2', '\x2', 'q', 'p', '\x3', 
		'\x2', '\x2', '\x2', 'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 'q', '\x3', 
		'\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'u', 'v', '\x5', '!', '\x11', '\x2', 'v', ' ', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'y', '\a', '\x30', '\x2', '\x2', 'x', 'z', '\t', 
		'\x3', '\x2', '\x2', 'y', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', 
		'\x2', '\x2', '\x2', '{', 'y', '\x3', '\x2', '\x2', '\x2', '{', '|', '\x3', 
		'\x2', '\x2', '\x2', '|', '\"', '\x3', '\x2', '\x2', '\x2', '}', '\x7F', 
		'\a', '/', '\x2', '\x2', '~', '}', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', '\x81', '\x3', '\x2', '\x2', '\x2', 
		'\x80', '\x82', '\t', '\x3', '\x2', '\x2', '\x81', '\x80', '\x3', '\x2', 
		'\x2', '\x2', '\x82', '\x83', '\x3', '\x2', '\x2', '\x2', '\x83', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\x3', '\x2', '\x2', '\x2', 
		'\x84', '$', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', 'v', '\x2', 
		'\x2', '\x86', '\x87', '\a', 't', '\x2', '\x2', '\x87', '\x88', '\a', 
		'w', '\x2', '\x2', '\x88', '\x8F', '\a', 'g', '\x2', '\x2', '\x89', '\x8A', 
		'\a', 'h', '\x2', '\x2', '\x8A', '\x8B', '\a', '\x63', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', 'n', '\x2', '\x2', '\x8C', '\x8D', '\a', 'u', '\x2', '\x2', 
		'\x8D', '\x8F', '\a', 'g', '\x2', '\x2', '\x8E', '\x85', '\x3', '\x2', 
		'\x2', '\x2', '\x8E', '\x89', '\x3', '\x2', '\x2', '\x2', '\x8F', '&', 
		'\x3', '\x2', '\x2', '\x2', '\x90', '\x93', '\x5', '-', '\x17', '\x2', 
		'\x91', '\x93', '\a', '\x61', '\x2', '\x2', '\x92', '\x90', '\x3', '\x2', 
		'\x2', '\x2', '\x92', '\x91', '\x3', '\x2', '\x2', '\x2', '\x93', '\x99', 
		'\x3', '\x2', '\x2', '\x2', '\x94', '\x98', '\x5', '-', '\x17', '\x2', 
		'\x95', '\x98', '\x5', '\x33', '\x1A', '\x2', '\x96', '\x98', '\a', '\x61', 
		'\x2', '\x2', '\x97', '\x94', '\x3', '\x2', '\x2', '\x2', '\x97', '\x95', 
		'\x3', '\x2', '\x2', '\x2', '\x97', '\x96', '\x3', '\x2', '\x2', '\x2', 
		'\x98', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x99', '\x97', '\x3', '\x2', 
		'\x2', '\x2', '\x99', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9A', '(', 
		'\x3', '\x2', '\x2', '\x2', '\x9B', '\x99', '\x3', '\x2', '\x2', '\x2', 
		'\x9C', '\x9F', '\x5', '-', '\x17', '\x2', '\x9D', '\x9F', '\a', '\x61', 
		'\x2', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9D', 
		'\x3', '\x2', '\x2', '\x2', '\x9F', '\xA5', '\x3', '\x2', '\x2', '\x2', 
		'\xA0', '\xA4', '\x5', '-', '\x17', '\x2', '\xA1', '\xA4', '\x5', '\x33', 
		'\x1A', '\x2', '\xA2', '\xA4', '\t', '\x4', '\x2', '\x2', '\xA3', '\xA0', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '\xA1', '\x3', '\x2', '\x2', '\x2', 
		'\xA3', '\xA2', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA7', '\x3', '\x2', 
		'\x2', '\x2', '\xA5', '\xA3', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA6', 
		'\x3', '\x2', '\x2', '\x2', '\xA6', '*', '\x3', '\x2', '\x2', '\x2', '\xA7', 
		'\xA5', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xA9', '\t', '\x5', '\x2', 
		'\x2', '\xA9', ',', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAD', '\x5', 
		'/', '\x18', '\x2', '\xAB', '\xAD', '\x5', '\x31', '\x19', '\x2', '\xAC', 
		'\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAB', '\x3', '\x2', '\x2', 
		'\x2', '\xAD', '.', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xAF', '\x4', 
		'\x63', '|', '\x2', '\xAF', '\x30', '\x3', '\x2', '\x2', '\x2', '\xB0', 
		'\xB1', '\x4', '\x43', '\\', '\x2', '\xB1', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\xB2', '\xB3', '\x4', '\x32', ';', '\x2', '\xB3', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\xB4', '\xB5', '\t', '\x6', '\x2', '\x2', '\xB5', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\xB6', '\xB7', '\x5', '\x35', '\x1B', 
		'\x2', '\xB7', '\xB8', '\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', '\b', 
		'\x1C', '\x2', '\x2', '\xB9', '\x38', '\x3', '\x2', '\x2', '\x2', '\x12', 
		'\x2', '\x66', 'h', 'n', 's', '{', '~', '\x83', '\x8E', '\x92', '\x97', 
		'\x99', '\x9E', '\xA3', '\xA5', '\xAC', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Donatello.Parser.Generated
